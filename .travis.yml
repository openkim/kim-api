#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the Common Development
# and Distribution License Version 1.0 (the "License").
#
# You can obtain a copy of the license at
# http://www.opensource.org/licenses/CDDL-1.0.  See the License for the
# specific language governing permissions and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each file and
# include the License file in a prominent location with the name LICENSE.CDDL.
# If applicable, add the following below this CDDL HEADER, with the fields
# enclosed by brackets "[]" replaced with your own identifying information:
#
# Portions Copyright (c) [yyyy] [name of copyright owner]. All rights reserved.
#
# CDDL HEADER END
#

#
# Copyright (c) 2013--2019, Regents of the University of Minnesota.
# All rights reserved.
#
# Contributors:
#    Richard Berger
#    Christoph Junghans
#    Ryan S. Elliott
#

#
# Release: This file is part of the kim-api.git repository.
#

language: cpp

sudo: required

env:
  global:
    - secure: "knFkRceVfuvlc7j9u5OUDHCMlPu531f/HR6TV4zboPc8UtbJ/Hiz7ooRO2VZheoMhdWJjaWQLYEJ1CGLyszziCbETeBj6cbNmzXVcgE2p2JWI76L7RLIMZrAjDeg0X+p9l7HcFvEBMIz87jqirwuyZZVBdYPxOL8ECiPJIyS2Ec5cwTyj4TBYomNfrL8lksj10ui6HOPQ63jsF8B68ZzsmPf2CSZPZgLqDZAyBxc+jGdOB7TF6O5dJALWzMW0AdWdpsOxRkBCZHQdUEqeYMBF0Ypq1Xj/Tol5Qsh0UMYTHZ4E72XwSLL+wyUKpCR96iWqI8jYnYY+/h/eNcVKABPMX2nE0xaqhNPbdEVJPMaayVdxJMzDWxt2eIXTxLRPjcoqCiLGF9G860dxfvTwz7RSQZtnJmTClO/5jHdoDltof372E0MJOh7W2lR22jNDAHT6tmPevZGyTsMN+vKJ/u46P1v5DbdeRAgdjikVYCqqaqUvWzqj5Urs4gZI/dyPyEAZy0mwOgKdpEQhcNCDquq03jCU/V9SlqLgkyZPcTA9PVFtFTgZhEm6rA+hK/vtqo6BZxewyoFGDgVXOylA4f90kPZqOgO83ufeYi+s8RGLxAxLddcsxh4wtGhgnEwQJlznjxfWCKiirRZ4ZXSikoa28R/RbmK27syhYFbjs27D3g="

matrix:
  include:
    - name: "osX Debug, Sanitize, Coverage"
      if: branch != coverity_scan
      os: osx
      env: INSTALL_PREFIX=/usr/local \
           LIB_DIR=lib \
           BASH_COMPLETION_DIR=/usr/local/etc \
           CMAKE_BUILD_TYPE=Debug \
           SANITIZE=true \
           COVERAGE=true \
           COVERITY=false
      before_script:
        - brew update &> /dev/null &&
          brew install gcc@6 ccache iwyu &&
          export PATH="/usr/local/opt/ccache/libexec:$PATH" &&
          export CC=gcc-6 &&
          export CXX=g++-6 &&
          export FC=gfortran-6
          export IWYU=YES
        - env
      script:
        - ./scripts/ci-build-and-test-script.sh
    - name: "linux fedora, Debug, Sanitize"
      if: branch != coverity_scan
      os: linux
      services: docker
      env: DISTRO=fedora \
           INSTALL_PREFIX=/usr \
           LIB_DIR=lib64 \
           BASH_COMPLETION_DIR=/etc \
           CMAKE_BUILD_TYPE=Debug \
           SANITIZE=true \
           COVERAGE="" \
           COVERITY=false
      before_script:
        - mkdir ${HOME}/docker &&
          cp -v docker/Dockerfile.${DISTRO} ${HOME}/docker/Dockerfile &&
          cd ../../ &&
          mv -v ${TRAVIS_REPO_SLUG} $HOME/docker &&
          cp -r $HOME/.ccache ${HOME}/docker/ccache
        - env
      script:
        - travis_retry docker build -t ${TRAVIS_REPO_SLUG}:${DISTRO}
                   --build-arg B_CC=${CC}
                   --build-arg B_CXX=${CXX}
                   --build-arg B_FC=${FC}
                   --build-arg B_CXXFLAGS="${CXXFLAGS}"
                   --build-arg B_INSTALL_PREFIX="${INSTALL_PREFIX}"
                   --build-arg B_LIB_DIR="${LIB_DIR}"
                   --build-arg B_BASH_COMPLETION_DIR="${BASH_COMPLETION_DIR}"
                   --build-arg B_CMAKE_BUILD_TYPE="${CMAKE_BUILD_TYPE}"
                   --build-arg B_COVERAGE="${COVERAGE}"
                   --build-arg B_SANITIZE="${SANITIZE}"
                   --build-arg B_IWYU=${LEAVE_EMPTY_WHILE_FEDORAS_IWYU_IS_SO_OLD:+}
                   --build-arg B_CI=${CI}
                   --build-arg B_TRAVIS=${TRAVIS}
                   --build-arg B_TRAVIS_OS_NAME=${DISTRO:-fedora}
                   --build-arg B_TRAVIS_BRANCH=${TRAVIS_BRANCH}
                   --build-arg B_TRAVIS_JOB_NUMBER=${TRAVIS_JOB_NUMBER}
                   --build-arg B_TRAVIS_PULL_REQUEST=${TRAVIS_PULL_REQUEST}
                   --build-arg B_TRAVIS_JOB_ID=${TRAVIS_JOB_ID}
                   --build-arg B_TRAVIS_TAG=${TRAVIS_TAG}
                   --build-arg B_TRAVIS_REPO_SLUG=${TRAVIS_REPO_SLUG}
                   --build-arg B_TRAVIS_COMMIT=${TRAVIS_COMMIT}
                   ${HOME}/docker/ &&
          docker run -it --cap-add SYS_PTRACE --cidfile container.pid ${TRAVIS_REPO_SLUG}:${DISTRO} &&
          rm -rf $HOME/.ccache &&
          CON=`cat container.pid` &&
          docker cp ${CON}:/home/kim/.ccache ${HOME}/
    - name: "Coverity Scan"
      if: branch = coverity_scan
      os: linux
      env: COVERITY=true
      before_install:
        - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-
        - env
      script:
        - true
      after_success:
        - cat /home/travis/build/openkim/kim-api/cov-int/scm_log.txt

cache:
  - ccache

addons:
  apt:
    packages:
      - make
      - cmake
      - git
      - g++
      - gfortran
      - ccache
      - wget
      - vim-common
  coverity_scan:
    project:
      name: "openkim/kim-api"
      description: "OpenKIM is an online framework for making molecular simulations reliable, reproducible, and portable. Computer implementations of interatomic models are archived in OpenKIM, verified for coding integrity, and tested by computing their predictions for a variety of material properties. Models conforming to the KIM application programming interface (API) work seamlessly with major simulation codes that have adopted the KIM API standard."
    notification_email: relliott@umn.edu
    build_command_prepend: "cmake ."
    build_command: "make"
    branch_pattern: coverity_scan
