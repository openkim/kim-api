#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the Common Development
# and Distribution License Version 1.0 (the "License").
#
# You can obtain a copy of the license at
# http://www.opensource.org/licenses/CDDL-1.0.  See the License for the
# specific language governing permissions and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each file and
# include the License file in a prominent location with the name LICENSE.CDDL.
# If applicable, add the following below this CDDL HEADER, with the fields
# enclosed by brackets "[]" replaced with your own identifying information:
#
# Portions Copyright (c) [yyyy] [name of copyright owner]. All rights reserved.
#
# CDDL HEADER END
#

#
# Copyright (c) 2013--2019, Regents of the University of Minnesota.
# All rights reserved.
#
# Contributors:
#    Richard Berger
#    Christoph Junghans
#    Ryan S. Elliott
#    Alexander Stukowski
#

#
# Release: This file is part of the kim-api.git repository.
#

name: Debug and sanitize

# Run when pushing to all branches other than 'coverity_scan'
on:
  push:
    branches-ignore:
      - 'coverity_scan'

jobs:

  fedora-debug-sanitize:

    name: Fedora (debug & sanitize)

    runs-on:
      ubuntu-latest

    env:
      DISTRO: fedora
      CMAKE_BUILD_TYPE: Debug
      SANITIZE: true
      CXX17: true

    steps:

      - name: Check out repository
        uses: actions/checkout@v2

      # TODO: Should ${HOME}/.ccache always exist?
      # TODO: Use actions/cache@v2?
      - name: Initialize work and ccache dirs
        run: |
          mkdir -p "${HOME}/work"
          cd "${HOME}/work"
          mkdir ccache
          if [ -d "${HOME}/.ccache" ]; then cp -r "${HOME}"/.ccache/* ccache; fi
          env

      - name: Build docker, build KIM API, run tests
        run: |
          cd ${HOME}/work
          ${GITHUB_WORKSPACE}/scripts/ci-docker-build-and-run \
            "${GITHUB_WORKSPACE}" \
            "${DISTRO}" \
            "${GITHUB_REPOSITORY}:${DISTRO}" \
            "${HOME}/work/ccache"

  ubuntu-debug-sanitize:

    name: Ubuntu (debug & sanitize)

    runs-on:
      ubuntu-latest

    env:
      DISTRO: ubuntu
      CMAKE_BUILD_TYPE: Debug
      SANITIZE: true
      CXX17: true

    steps:

      - name: Check out repository
        uses: actions/checkout@v2

      # TODO: Should ${HOME}/.ccache always exist?
      # TODO: Use actions/cache@v2?
      - name: Initialize work and ccache dirs
        run: |
          mkdir -p "${HOME}/work"
          cd "${HOME}/work"
          mkdir ccache
          if [ -d "${HOME}/.ccache" ]; then cp -r "${HOME}"/.ccache/* ccache; fi
          env

      - name: Build docker, build KIM API, run tests
        run: |
          cd ${HOME}/work
          ${GITHUB_WORKSPACE}/scripts/ci-docker-build-and-run \
            "${GITHUB_WORKSPACE}" \
            "${DISTRO}" \
            "${GITHUB_REPOSITORY}:${DISTRO}" \
            "${HOME}/work/ccache"

  ubuntu-cmake310-debug:

    name: Ubuntu cmake@3.10 (debug)

    runs-on:
      ubuntu-latest

    env:
      DISTRO: ubuntu_cmake310
      CMAKE_BUILD_TYPE: Debug

    steps:

      - name: Check out repository
        uses: actions/checkout@v2

      # TODO: Should ${HOME}/.ccache always exist?
      # TODO: Use actions/cache@v2?
      - name: Initialize work and ccache dirs
        run: |
          mkdir -p "${HOME}/work"
          cd "${HOME}/work"
          mkdir ccache
          if [ -d "${HOME}/.ccache" ]; then cp -r "${HOME}"/.ccache/* ccache; fi
          env

      - name: Build docker, build KIM API, run tests
        run: |
          cd ${HOME}/work
          ${GITHUB_WORKSPACE}/scripts/ci-docker-build-and-run \
            "${GITHUB_WORKSPACE}" \
            "${DISTRO}" \
            "${GITHUB_REPOSITORY}:${DISTRO}" \
            "${HOME}/work/ccache"